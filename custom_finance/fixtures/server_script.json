[
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Submit",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-12-21 16:40:17.630410",
  "module": "custom_finance",
  "name": "Top-up Transactions",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Top-up Transactions",
  "script": "# Server Script for \"Top-up Transactions\"\r\n# Triggered after the custom Doctype is submitted\r\n\r\nif not doc.transactions_account:  # Ensure the table is not empty\r\n    frappe.throw(\"The transactions_account table is empty. Cannot create a Journal Entry.\")\r\n\r\n# Create a new Journal Entry\r\njournal_entry = frappe.get_doc({\r\n    \"doctype\": \"Journal Entry\",\r\n    \"voucher_type\": \"Journal Entry\",  # You can adjust this as needed\r\n    \"posting_date\": doc.posting_date,  # Replace with the posting date field in your Doctype\r\n    \"company\": doc.company,  # Replace with the company field in your Doctype\r\n    \"custom_operation_type\": doc.operation_type,  # Replace with the company field in your Doctype\r\n    \"accounts\": []  # Initialize the accounts table\r\n})\r\n\r\n# Populate the accounts table in the Journal Entry\r\nfor row in doc.transactions_account:  # Replace with your actual child table fieldname\r\n    if row.debit and row.credit:\r\n        frappe.throw(f\"Both debit and credit are set for account {row.account}. Please fix the data.\")\r\n    elif not (row.debit or row.credit):\r\n        frappe.throw(f\"No debit or credit set for account {row.account}. Please fix the data.\")\r\n\r\n    # Add an account entry\r\n    journal_entry.append(\"accounts\", {\r\n        \"account\": row.account,  # Replace with the field name for account in your child table\r\n        \"debit_in_account_currency\": row.debit or 0,  # Set debit amount\r\n        \"credit_in_account_currency\": row.credit or 0,  # Set credit amount\r\n        # Optional: If cost_center exists in your row\r\n    })\r\n\r\n# Save and submit the Journal Entry\r\nif journal_entry.accounts:\r\n    journal_entry.insert()\r\n    journal_entry.submit()\r\n    # Add clickable link in the success message\r\n    frappe.msgprint(f\"Journal Entry <a href='/app/journal-entry/{journal_entry.name}' target='_blank'>{journal_entry.name}</a> created successfully for Cash Transfers to Merchants {doc.name}.\")\r\nelse:\r\n    frappe.throw(\"No valid account entries were found to create a Journal Entry.\")\r\n",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Submit",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-12-21 16:40:05.242404",
  "module": "custom_finance",
  "name": "Revenue recording",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Revenue recording",
  "script": "# Validate that the accounts table is not empty\r\nif not doc.accounts:\r\n    frappe.throw(\"The accounts table is empty. Cannot create a Journal Entry.\")\r\n\r\n# Create a new Journal Entry\r\njournal_entry = frappe.get_doc({\r\n    \"doctype\": \"Journal Entry\",\r\n    \"voucher_type\": \"Journal Entry\",  # Adjust as needed\r\n    \"posting_date\": doc.date,  # Replace with your actual posting date field\r\n    \"accounts\": []  # Initialize the accounts table\r\n})\r\n\r\n# Populate the accounts table in the Journal Entry\r\nfor row in doc.accounts:  # Replace 'accounts' with the child table fieldname\r\n    # Skip rows where neither debit nor credit is set\r\n    if not (row.debit or row.credit):\r\n        frappe.msgprint(f\"Skipping row with account {row.account} as neither debit nor credit is set.\")\r\n        continue\r\n\r\n    # Append account entries to the Journal Entry\r\n    journal_entry.append(\"accounts\", {\r\n        \"account\": row.account,  # Replace with the field name for the account\r\n        \"debit_in_account_currency\": row.debit or 0,  # Debit amount\r\n        \"credit_in_account_currency\": row.credit or 0,  # Credit amount\r\n        \"party_type\": row.party_type,  # Optional: add party type\r\n        \"party\": row.party,  # Optional: add party\r\n        \"cost_center\": row.cost_center,  # Optional: add cost center\r\n        \"user_remark\": row.user_remark,  # Optional: add user remark\r\n    })\r\n\r\n# Save and submit the Journal Entry\r\nif journal_entry.accounts:\r\n    journal_entry.insert()\r\n    journal_entry.submit()\r\n    # Add clickable link in the success message\r\n    frappe.msgprint(f\"Journal Entry <a href='/app/journal-entry/{journal_entry.name}' target='_blank'>{journal_entry.name}</a> created successfully for Cash Transfers to Merchants {doc.name}.\")\r\nelse:\r\n    frappe.throw(\"No valid account entries were found to create a Journal Entry.\")\r\n",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Submit",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-12-21 16:39:23.341435",
  "module": "custom_finance",
  "name": "Cash Transfers to Merchants",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Cash Transfers to Merchants",
  "script": "# Validate that the accounts table is not empty\r\nif not doc.accounts:\r\n    frappe.throw(\"The accounts table is empty. Cannot create a Journal Entry.\")\r\n\r\n# Create a new Journal Entry\r\njournal_entry = frappe.get_doc({\r\n    \"doctype\": \"Journal Entry\",\r\n    \"voucher_type\": \"Journal Entry\",  # Adjust as needed\r\n    \"posting_date\": doc.date,  # Replace with your actual posting date field\r\n    \"accounts\": []  # Initialize the accounts table\r\n})\r\n\r\n# Populate the accounts table in the Journal Entry\r\nfor row in doc.accounts:  # Replace 'accounts' with the child table fieldname\r\n    # Skip rows where neither debit nor credit is set\r\n    if not (row.debit or row.credit):\r\n        frappe.msgprint(f\"Skipping row with account {row.account} as neither debit nor credit is set.\")\r\n        continue\r\n\r\n    # Append account entries to the Journal Entry\r\n    journal_entry.append(\"accounts\", {\r\n        \"account\": row.account,  # Replace with the field name for the account\r\n        \"debit_in_account_currency\": row.debit or 0,  # Debit amount\r\n        \"credit_in_account_currency\": row.credit or 0,  # Credit amount\r\n        \"party_type\": row.party_type,  # Optional: add party type\r\n        \"party\": row.party,  # Optional: add party\r\n        \"cost_center\": row.cost_center,  # Optional: add cost center\r\n        \"user_remark\": row.user_remark,  # Optional: add user remark\r\n    })\r\n\r\n# Save and submit the Journal Entry\r\nif journal_entry.accounts:\r\n    journal_entry.insert()\r\n    journal_entry.submit()\r\n    # Add clickable link in the success message\r\n    frappe.msgprint(f\"Journal Entry <a href='/app/journal-entry/{journal_entry.name}' target='_blank'>{journal_entry.name}</a> created successfully for Cash Transfers to Merchants {doc.name}.\")\r\nelse:\r\n    frappe.throw(\"No valid account entries were found to create a Journal Entry.\")\r\n",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Submit",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-12-21 16:41:05.594370",
  "module": "custom_finance",
  "name": "Central Bank Transfers",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Central Bank Transfers",
  "script": "# Validate that the accounts table is not empty\r\nif not doc.accounts:\r\n    frappe.throw(\"The accounts table is empty. Cannot create a Journal Entry.\")\r\n\r\n# Create a new Journal Entry\r\njournal_entry = frappe.get_doc({\r\n    \"doctype\": \"Journal Entry\",\r\n    \"voucher_type\": \"Journal Entry\",  # Adjust as needed\r\n    \"posting_date\": doc.date,  # Replace with your actual posting date field\r\n    \"accounts\": []  # Initialize the accounts table\r\n})\r\n\r\n# Populate the accounts table in the Journal Entry\r\nfor row in doc.accounts:  # Replace 'accounts' with the child table fieldname\r\n    # Skip rows where neither debit nor credit is set\r\n    if not (row.debit or row.credit):\r\n        frappe.msgprint(f\"Skipping row with account {row.account} as neither debit nor credit is set.\")\r\n        continue\r\n\r\n    # Append account entries to the Journal Entry\r\n    journal_entry.append(\"accounts\", {\r\n        \"account\": row.account,  # Replace with the field name for the account\r\n        \"debit_in_account_currency\": row.debit or 0,  # Debit amount\r\n        \"credit_in_account_currency\": row.credit or 0,  # Credit amount\r\n        \"party_type\": row.party_type,  # Optional: add party type\r\n        \"party\": row.party,  # Optional: add party\r\n        \"cost_center\": row.cost_center,  # Optional: add cost center\r\n        \"user_remark\": row.user_remark,  # Optional: add user remark\r\n    })\r\n\r\n# Save and submit the Journal Entry\r\nif journal_entry.accounts:\r\n    journal_entry.insert()\r\n    journal_entry.submit()\r\n    # Add clickable link in the success message\r\n    frappe.msgprint(f\"Journal Entry <a href='/app/journal-entry/{journal_entry.name}' target='_blank'>{journal_entry.name}</a> created successfully for Central Bank Transfers {doc.name}.\")\r\nelse:\r\n    frappe.throw(\"No valid account entries were found to create a Journal Entry.\")\r\n",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Submit",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-12-21 16:42:37.590698",
  "module": "custom_finance",
  "name": "Cheque Reconciliation",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Cheque Reconciliation",
  "script": "# Validate that the accounts table is not empty\r\nif not doc.accounts:\r\n    frappe.throw(\"The accounts table is empty. Cannot create a Journal Entry.\")\r\n\r\n# Create a new Journal Entry\r\njournal_entry = frappe.get_doc({\r\n    \"doctype\": \"Journal Entry\",\r\n    \"voucher_type\": \"Journal Entry\",  # Adjust as needed\r\n    \"posting_date\": doc.date,  # Replace with your actual posting date field\r\n    \"accounts\": []  # Initialize the accounts table\r\n})\r\n\r\n# Populate the accounts table in the Journal Entry\r\nfor row in doc.accounts:  # Replace 'accounts' with the child table fieldname\r\n    # Skip rows where neither debit nor credit is set\r\n    if not (row.debit or row.credit):\r\n        frappe.msgprint(f\"Skipping row with account {row.account} as neither debit nor credit is set.\")\r\n        continue\r\n\r\n    # Append account entries to the Journal Entry\r\n    journal_entry.append(\"accounts\", {\r\n        \"account\": row.account,  # Replace with the field name for the account\r\n        \"debit_in_account_currency\": row.debit or 0,  # Debit amount\r\n        \"credit_in_account_currency\": row.credit or 0,  # Credit amount\r\n        \"party_type\": row.party_type,  # Optional: add party type\r\n        \"party\": row.party,  # Optional: add party\r\n        \"cost_center\": row.cost_center,  # Optional: add cost center\r\n        \"user_remark\": row.user_remark,  # Optional: add user remark\r\n    })\r\n\r\n# Save and submit the Journal Entry\r\nif journal_entry.accounts:\r\n    journal_entry.insert()\r\n    journal_entry.submit()\r\n    # Add clickable link in the success message\r\n    frappe.msgprint(f\"Journal Entry <a href='/app/journal-entry/{journal_entry.name}' target='_blank'>{journal_entry.name}</a> created successfully for Cheque Reconciliation {doc.name}.\")\r\nelse:\r\n    frappe.throw(\"No valid account entries were found to create a Journal Entry.\")\r\n",
  "script_type": "DocType Event"
 }
]